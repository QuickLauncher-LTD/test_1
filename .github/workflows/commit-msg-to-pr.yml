name: Update PR Description with Commit Messages

on:
  pull_request_target:
    types: [opened, reopen, synchronize]

jobs:
  update-description:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Commit Messages
        id: get-commit-messages
        run: |
          # PR의 베이스 브랜치와 HEAD 브랜치 간의 커밋 메시지 추출
          commit_messages=$(git log --format=%B origin/${{ github.base_ref }}..origin/${{ github.head_ref }})
          commit_messages="${commit_messages//'%'/'%25'}"
          commit_messages="${commit_messages//$'\n'/'%0A'}"
          commit_messages="${commit_messages//$'\r'/'%0D'}"
          echo "::set-output name=messages::$commit_messages"

      - name: Update PR description
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 현재 PR의 설명을 가져옵니다.
          PR_DESCRIPTION=$(gh pr view ${{ github.event.pull_request.number }} --repo ${{ github.repository }} --json body -q .body)

          PR_HEADER=$(echo "$PR_DESCRIPTION" | sed '/### Commit Messages/q')
          UPDATED_DESCRIPTION="${PR_HEADER}### Commit Messages
${{ steps.get-commit-messages.outputs.messages }}"

          # # 새로운 내용을 추가합니다. 커밋 메시지를 포함시킵니다.
          # UPDATED_DESCRIPTION="${PR_DESCRIPTION}
          # ---
          # ### Commit Messages
          # ${{ steps.get-commit-messages.outputs.messages }}"

          # PR의 설명을 업데이트합니다.
          gh pr edit ${{ github.event.pull_request.number }} --repo ${{ github.repository }} --body "$UPDATED_DESCRIPTION"
